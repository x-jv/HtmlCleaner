<project name="HtmlCleaner" default="prepare-for-mvn-repo-deploy" basedir=".">
    <description>HtmlCleaner</description>
    <property name="version" value="2.4"/>

    <!-- override if you a poor windows user -->
    <!-- probably should be done within maven using ant-run -->
    <property name="mvn" value="mvn"/>
    <target name="prepare-for-mvn-repo-deploy" description="it works">
        <!-- do "mvn clean install package gpg:sign"  manually so you can enter passphrase
        <exec executable="${mvn}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="package"/>
            <arg value="gpg:sign"/>
        </exec>
        -->
        <copy file="pom.xml" tofile="target/htmlcleaner-${version}.pom"></copy>
        <jar destfile="target/htmlcleaner-${version}-bundle.jar" basedir="target">
            <include name="htmlcleaner-${version}.pom"/>
            <include name="htmlcleaner-${version}.pom.asc"/>
            <include name="htmlcleaner-${version}.jar"/>
            <include name="htmlcleaner-${version}.jar.asc"/>
            <include name="htmlcleaner-${version}-sources.jar"/>
            <include name="htmlcleaner-${version}-sources.jar.asc"/>
            <include name="htmlcleaner-${version}-javadoc.jar"/>
            <include name="htmlcleaner-${version}-javadoc.jar.asc"/>
        </jar>
    </target>
    <target name="deploy-to-mvnrepo">
        <copy file="pom.xml" tofile="target/htmlcleaner-${version}.pom"></copy>
        <antcall target="_deploy-to-mvnrepository">
            <param name="_file" value="target/htmlcleaner-${version}.jar"/>
            <param name="_classifier" value=""/>
        </antcall>
        <antcall target="_deploy-to-mvnrepository">
            <param name="_file" value="target/htmlcleaner-javadoc-${version}.jar"/>
            <param name="_classifier" value="-Dclassifier=javadoc"/>
        </antcall>
        <antcall target="_deploy-to-mvnrepository">
            <param name="_file" value="target/htmlcleaner-sources-${version}.jar"/>
            <param name="_classifier" value="-Dclassifier=sources"/>
        </antcall>
    </target>
    <target name="_deploy-to-mvnrepository">
        <exec executable="${mvn}">
            <arg value="gpg:sign-and-deploy-file"/>
            <arg value="-Durl=https://oss.sonatype.org/service/local/staging/deploy/maven2/"/>
            <arg value="-DrepositoryId=sonatype-nexus-staging"/>
            <arg value="-DpomFile=target/htmlcleaner-${version}.pom"/>
            <arg value="-Dfile=${_file}"/>            
            <arg value="${_classifier}"/>           
        </exec>
    </target>
    <!-- everything below is old and probably broken/not used since project shifted to start using maven for building -->
    <property name="dir.src" value="src/main/java"/>
    <property name="dir.lib" value="lib"/>
    <property name="dir.doc" value="doc"/>
    <property name="dir.dist" value="dist"/>
    <property name="dir.zip" value="zip"/>
    <property name="jarfile" value="htmlcleaner${version}.jar"/>

    <!-- classpath -->
    <path id="classpath.compile">
        <pathelement location="${dir.lib}/ant.jar"/>
        <pathelement location="${dir.lib}/jdom.jar"/>
    </path>

    <!--  sources targets -->
    <target name="build" description="compilation of source files">
        <mkdir dir="${dir.dist}"/>
        <javac srcdir="${dir.src}" destdir="${dir.dist}" listfiles="on" source="1.5" target="1.5">
            <classpath refid="classpath.compile"/>
        </javac>
    </target>

    <!--  creates jar library -->
    <target name="jar" depends="build" description="creates jar library">
        <jar destfile="${jarfile}" basedir="${dir.dist}" manifest="config/MANIFEST.MF"/>
    </target>

    <!--  delete distribution folders -->
    <target name="clean" description="cleans distribution">
        <delete file="${jarfile}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.zip}"/>
        <delete dir="${dir.doc}"/>
    </target>

    <!--  generate Java docs -->
    <target name="javadoc">
        <javadoc access="protected"
                 author="true"
                 source="1.5"
                 destdir="doc"
                 nodeprecated="false"
                 nodeprecatedlist="false"
                 noindex="false"
                 nonavbar="false"
                 notree="false"
                 packagenames="org.htmlcleaner"
                 sourcepath="${dir.src}"
                 splitindex="true"
                 use="true"
                 version="true"/>
    </target>

    <target depends="jar,javadoc" name="zip">
        <mkdir dir="${dir.zip}"/>

        <zip destfile="${dir.zip}/htmlcleaner${version}-bin.zip">
            <zipfileset file="${jarfile}"/>
            <zipfileset dir="doc" prefix="doc"/>
            <zipfileset file="default.xml"/>
        </zip>

        <zip destfile="${dir.zip}/htmlcleaner${version}-all.zip">
            <zipfileset file="${jarfile}"/>
            <zipfileset file="licence.txt"/>
            <zipfileset dir="src" prefix="src" />
            <zipfileset dir="test" prefix="test" />
            <zipfileset dir="config" prefix="config"/>
            <zipfileset dir="doc" prefix="doc"/>
            <zipfileset dir="lib" prefix="lib"/>
            <zipfileset file="default.xml"/>
            <zipfileset file="build.xml"/>
            <zipfileset file="pom.xml"/>
        </zip>
    </target>

</project>
